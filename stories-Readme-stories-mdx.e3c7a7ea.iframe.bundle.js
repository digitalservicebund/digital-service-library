"use strict";(self.webpackChunk_digitalservice4germany_digital_service_library=self.webpackChunk_digitalservice4germany_digital_service_library||[]).push([[246],{"./node_modules/@storybook/addon-docs/dist/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aT:()=>_blocks__WEBPACK_IMPORTED_MODULE_0__.AddContext,$4:()=>_blocks__WEBPACK_IMPORTED_MODULE_0__.ArgsTable,Xz:()=>_blocks__WEBPACK_IMPORTED_MODULE_0__.Canvas,h_:()=>_blocks__WEBPACK_IMPORTED_MODULE_0__.Meta,oG:()=>_blocks__WEBPACK_IMPORTED_MODULE_0__.Story});var _blocks__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/blocks/index.js")},"./src/stories/Readme.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__page:()=>__page,default:()=>Readme_stories});__webpack_require__("./node_modules/react/index.js");var esm=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),dist_esm=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const layoutProps={};function MDXContent({components,...props}){return(0,esm.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)("p",{align:"center"},(0,esm.kt)("img",{src:"https://github.com/digitalservice4germany/digital-service-library/blob/main/public/images/logo_200px.jpeg?raw=true",alt:"Digital Service 4 Germany Logo"})),(0,esm.kt)("h1",{id:"digital-service-library"},"digital-service-library"),(0,esm.kt)("p",null,"Component Library for and by DigitalService4Germany"),(0,esm.kt)("p",null,(0,esm.kt)("a",{parentName:"p",href:"https://digitalservice4germany.github.io/digital-service-library/?path=/story/docs-readme--page",target:"_blank",rel:"nofollow noopener noreferrer"},(0,esm.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Documentation-blue.svg",alt:"Documentation"})),"\n",(0,esm.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@digitalservice4germany/digital-service-library",target:"_blank",rel:"nofollow noopener noreferrer"},(0,esm.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@digitalservice4germany/digital-service-library.svg",alt:"version"})),"\n",(0,esm.kt)("a",{parentName:"p",href:"https://codecov.io/gh/digitalservice4germany/digital-service-library",target:"_blank",rel:"nofollow noopener noreferrer"},(0,esm.kt)("img",{parentName:"a",src:"https://codecov.io/gh/digitalservice4germany/digital-service-library/branch/main/graph/badge.svg?token=2FTXQ46IS0",alt:"codecov"})),"\n",(0,esm.kt)("a",{parentName:"p",href:"https://github.com/digitalservice4germany/digital-service-library/issues",target:"_blank",rel:"nofollow noopener noreferrer"},(0,esm.kt)("img",{parentName:"a",src:"https://img.shields.io/github/issues/digitalservice4germany/digital-service-library",alt:"Issues"})),"\n",(0,esm.kt)("a",{parentName:"p",href:"http://opensource.org/licenses/MIT",target:"_blank",rel:"nofollow noopener noreferrer"},(0,esm.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/l/starwars-names.svg",alt:"MIT License"}))),(0,esm.kt)("h2",{id:"requirements"},"Requirements"),(0,esm.kt)("ul",null,(0,esm.kt)("li",{parentName:"ul"},"React"),(0,esm.kt)("li",{parentName:"ul"},"TailwindCSS")),(0,esm.kt)("h2",{id:"installation"},"Installation"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @digitalservice4germany/digital-service-library\n")),(0,esm.kt)("h3",{id:"configure-tailwindcss"},"Configure TailwindCSS"),(0,esm.kt)("p",null,"The library expects an existing TailwindCSS setup in your project. Please change your ",(0,esm.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," in two places."),(0,esm.kt)("ol",null,(0,esm.kt)("li",{parentName:"ol"},"add the preset ",(0,esm.kt)("inlineCode",{parentName:"li"},'require("@digitalservice4germany/digital-service-library").TailwindConfig')),(0,esm.kt)("li",{parentName:"ol"},"add the path to the library's components ",(0,esm.kt)("inlineCode",{parentName:"li"},'"./node_modules/@digitalservice4germany/digital-service-library/dist/esm/index.js"')," to your array of content paths")),(0,esm.kt)("p",null,"Afterwards your config might look like this:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-js"},'module.exports = {\n  presets: [\n    require("@digitalservice4germany/digital-service-library").TailwindConfig,\n  ],\n  content: [\n    "./app/**/*.{ts,tsx}",\n    "./node_modules/@digitalservice4germany/digital-service-library/dist/esm/index.js",\n  ],\n};\n')),(0,esm.kt)("h2",{id:"usage"},"Usage"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Button } from "@digitalservice4germany/digital-service-library";\n\n<Button secondary small>Hello button!</Button>\n')),(0,esm.kt)("h2",{id:"development"},"Development"),(0,esm.kt)("h3",{id:"icons"},"Icons"),(0,esm.kt)("p",null,"Icon components are semi-automatically created from ",(0,esm.kt)("inlineCode",{parentName:"p"},".svg")," file in ",(0,esm.kt)("inlineCode",{parentName:"p"},"assets/icons"),". Put the svg file there and run ",(0,esm.kt)("inlineCode",{parentName:"p"},"npm run build-icons")," to create components in ",(0,esm.kt)("inlineCode",{parentName:"p"},"src/components/Icons"),". Adjust the names in ",(0,esm.kt)("inlineCode",{parentName:"p"},"src/components/Icons/index.tsx")),(0,esm.kt)("h3",{id:"yeoman-generator"},"Yeoman Generator"),(0,esm.kt)("p",null,"Basic scaffolding tool to create a component skeleton. Setup:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-bash"},"cd generator-storybook\nnpm install\nsudo npm link\n")),(0,esm.kt)("p",null,"If neccessary install ",(0,esm.kt)("inlineCode",{parentName:"p"},"yo"),":"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-bash"},"sudo npm install -g yo\n")),(0,esm.kt)("p",null,"Run the generator:"),(0,esm.kt)("pre",null,(0,esm.kt)("code",{parentName:"pre",className:"language-bash"},"yo storybook:component ComponentName\n")))}function Readme_stories_extends(){return Readme_stories_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},Readme_stories_extends.apply(this,arguments)}MDXContent.isMDXComponent=!0;const Readme_stories_layoutProps={};function Readme_stories_MDXContent({components,...props}){return(0,esm.kt)("wrapper",Readme_stories_extends({},Readme_stories_layoutProps,props,{components,mdxType:"MDXLayout"}),(0,esm.kt)(dist_esm.h_,{title:"Docs/Readme",mdxType:"Meta"}),(0,esm.kt)(MDXContent,{mdxType:"Readme"}))}Readme_stories_MDXContent.isMDXComponent=!0;const __page=()=>{throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};const componentMeta={title:"Docs/Readme",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:()=>(0,esm.kt)(dist_esm.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,esm.kt)(Readme_stories_MDXContent,null))};const Readme_stories=componentMeta}}]);